[gcode_macro ER_RAISE_ERROR_IF_PAUSED]
description: abort if ercf is paused
gcode:
  {% set add = params.MSG | default("ercf error",True) | string %}
  {% set notify = params.NOTIFY | default(False, True) | int %}

  {% if printer.ercf.is_locked %}
    CLEAR_PAUSE
    ERCF_UNLOCK
    EXTRUDER_CLEANUP
    COOLDOWN
    {% set msg = "ERCF: raising error %s" % (add) %}
    RAISE_ERROR MSG="{msg}" NOTIFY={notify}
  {% else %}
    M118 ercf not paused
  {% endif %}


[gcode_macro ER_STATUS]
description: echo current status
gcode:
  M118 { "ercf enabled: %s" % (printer.ercf.enabled) }
  M118 { "ercf locked: %d" % (printer.ercf.is_locked) }
  M118 { "print paused: %d" % (printer['pause_resume'].is_paused) }
  M118 { "printer status: %s" % (printer.idle_timeout.state) }
  M118 { "ercf filament: %s" % (printer.ercf.filament) }
  TOOLHEAD_SENSOR_STATUS
  M118 { "ercf tool: %s" % (printer.ercf.tool) }
  M118 { "ercf next tool: %s" % (printer.ercf.next_tool) }
  M118 { "-> T%s" % (printer['gcode_macro CHANGE_TOOL'].tool) }


[gcode_macro ERCF_VALIDATE_SLICER_EXTRUDER]
description: make sure ss extruder measurements match what ercf is using and are sane
gcode:

  # usage from within superslicer:
  #
  # ERCF_VALIDATE_SLICER_EXTRUDER COOLING_TUBE_LENGTH={cooling_tube_length} COOLING_TUBE_POSITION={cooling_tube_position} PARKING_POSITION={parking_pos_retraction} EXTRA_LOADING_DISTANCE={extra_loading_move}

  {% set SS_COOLING_TUBE_LENGTH = params.COOLING_TUBE_LENGTH | default(99) | float %}
  {% set SS_COOLING_TUBE_POSITION = params.COOLING_TUBE_POSITION | default(99) | float %}
  {% set SS_PARKING_POSITION = params.PARKING_POSITION | default(99) | float %}
  {% set SS_EXTRA_LOADING_DISTANCE = params.EXTRA_LOADING_DISTANCE | default(99) | float %}

  {% set ERCF_COOLING_TUBE_LENGTH = printer['gcode_macro _ERCF_FORM_TIP_STANDALONE']['cooling_tube_length'] | default(99) | float  %}
  {% set ERCF_COOLING_TUBE_POSITION = printer['gcode_macro _ERCF_FORM_TIP_STANDALONE']['cooling_tube_position'] | default(99) | float %}
  {% set ERCF_HOME_POSITION_TO_NOZZLE = printer.ercf.home_position_to_nozzle | default(99) | float %}

  {% set ok = 1 %}

  {% if SS_COOLING_TUBE_LENGTH != ERCF_COOLING_TUBE_LENGTH %}
    RESPOND MSG="{ "cooling tube length mismatch - ss:%0.1f, ercf:%0.1f" % (SS_COOLING_TUBE_LENGTH, ERCF_COOLING_TUBE_LENGTH) }" TYPE=error
    {% set ok = 0 %}
  {% endif %}

  {% if SS_COOLING_TUBE_POSITION != ERCF_COOLING_TUBE_POSITION %}
    RESPOND MSG="{ "cooling tube position mismatch - ss:%0.1f, ercf:%0.1f" % (SS_COOLING_TUBE_POSITION, ERCF_COOLING_TUBE_POSITION) }" TYPE=error
    {% set ok = 0 %}
  {% endif %}

  {% if SS_PARKING_POSITION >= ERCF_HOME_POSITION_TO_NOZZLE %}
    RESPOND MSG="{ "parking position invalid - ss parking_pos_retraction %0.1f >= ercf home_position_to_nozzle %0.1f" % (SS_PARKING_POSITION, ERCF_HOME_POSITION_TO_NOZZLE) }" TYPE=error
    {% set ok = 0 %}
  {% endif %}

  {% if SS_EXTRA_LOADING_DISTANCE != -(SS_PARKING_POSITION - 0.2) %}
    RESPOND MSG="{ "extra loading distance invalid - ss parking_pos_retraction(%0.1f) != -(ss extra_loading_move(%0.1f) - 0.2)" % (SS_PARKING_POSITION, SS_EXTRA_LOADING_DISTANCE) }" TYPE=error
    {% set ok = 0 %}
  {% endif %}

  {% if ok %}
    M118 superslicer extruder settings match current ercf settings
  {% else %}
    RAISE_ERROR MSG="ss extruder settings != ercf settings" NOTIFY=1
  {% endif %}


[gcode_macro ER_DISABLE_ENCODER]
description: disable filament encoder
gcode:
  {% set old_encoder = printer.ercf.clog_detection %}
  ERCF_TEST_CONFIG enable_clog_detection=0
  M118 "ERCF: disabled filament encoder: old value = {old_encoder}, new value = 0"


[gcode_macro ER_ENABLE_ENCODER]
description: re-enable filament encoder
gcode:
  {% set old_encoder = printer.ercf.clog_detection %}
  ERCF_TEST_CONFIG enable_clog_detection=2
  M118 "ERCF: enabled filament encoder: old value = {old_encoder}, new value = 2"


[gcode_macro ER_UNFSCK]
description: unfsck stuff...
gcode:
  ERCF_SERVO_UP
  ERCF_MOTORS_OFF
  ERCF_UNLOCK
