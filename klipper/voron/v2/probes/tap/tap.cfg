[gcode_macro TAP_SET_OFFSET]
gcode:
  {% set OFFSET = 0.56 | float %}

  SET_GCODE_OFFSET Z=0.0
  SET_GCODE_OFFSET Z_ADJUST={OFFSET}
  DISPLAY_Z
  COMPARE_STORED_Z_OFFSET


[delayed_gcode SET_TAP_OFFSET]
initial_duration: 1
gcode:
  TAP_SET_OFFSET


[stepper_z]
endstop_pin: probe:z_virtual_endstop
position_min: -5
homing_speed: 3
homing_retract_speed: 7
second_homing_speed: 3
homing_retract_dist: 2


[safe_z_home]
home_xy_position:172.5,172.5
speed:100
z_hop:10


[quad_gantry_level]
horizontal_move_z: 8
retry_tolerance: 0.005

[bed_mesh]
horizontal_move_z: 3


[probe]
x_offset: 0
y_offset: 0
z_offset: 0

speed: 3
lift_speed: 7
sample_retract_dist: 2.0

samples: 3
samples_result: median
samples_tolerance: 0.002
samples_tolerance_retries: 3

deactivate_on_each_sample: False

activate_gcode:
  {% set PROBE_TEMP = 150 | int %}

  _TAP_CHECK_TARGET_TEMP
  _TAP_CHECK_ACTUAL_TEMP

deactivate_gcode:
  _TAP_RESTORE_TARGET_TEMP


[gcode_macro _TAP_CHECK_TARGET_TEMP]
variable_probe_temp: 150
gcode:
  {% set PROBE_TEMP =  printer['gcode_macro _TAP_CHECK_TARGET_TEMP']['probe_temp'] | int %}
  {% set TARGET_TEMP = printer.extruder.target | int %}

  UPDATE_DELAYED_GCODE ID=DELAYED_TAP_RESTORE_TARGET_TEMP DURATION=0

  {% if TARGET_TEMP > PROBE_TEMP %}
    RESPOND MSG="{ 'extruder target %d too high, lowering target to %d' % (TARGET_TEMP, PROBE_TEMP) }" TYPE=error
    SET_GCODE_VARIABLE MACRO=_TAP_RESTORE_TARGET_TEMP VARIABLE=target VALUE={TARGET_TEMP}
    M104 S{ PROBE_TEMP }
  {% endif %}

  STATUS_READY

[gcode_macro _TAP_CHECK_ACTUAL_TEMP]
gcode:
  {% set PROBE_TEMP =  printer['gcode_macro _TAP_CHECK_TARGET_TEMP']['probe_temp'] | int %}
  {% set ACTUAL_TEMP = printer.extruder.temperature %}

  {% if ACTUAL_TEMP > PROBE_TEMP + 1 %}
    STATUS_COOLING
    RESPOND MSG="{ 'extruder temperature %.1f too high, cooling to %d...' % (ACTUAL_TEMP, PROBE_TEMP) }" TYPE=error
    {% set fan = printer.fan.speed %}
    STATUS_COOLDOWN
    M106 S255
    TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={PROBE_TEMP}
    STATUS_OK
    M106 S{'%d' % (fan * 255)}
  {% endif %}

  STATUS_READY


[gcode_macro _TAP_RESTORE_TARGET_TEMP]
variable_target: 0
gcode:
  UPDATE_DELAYED_GCODE ID=DELAYED_TAP_RESTORE_TARGET_TEMP DURATION=10

[delayed_gcode DELAYED_TAP_RESTORE_TARGET_TEMP]
initial_duration: 0
gcode:
  _DELAYED_TAP_RESTORE_TARGET_TEMP

[gcode_macro _DELAYED_TAP_RESTORE_TARGET_TEMP]
gcode:
  {% set PROBE_TEMP =  printer['gcode_macro _TAP_CHECK_TARGET_TEMP']['probe_temp'] | int %}
  {% set TARGET_TEMP = printer.extruder.target | int %}
  {% set ACTUAL_TEMP = printer.extruder.temperature | int %}

  {% set target = printer['gcode_macro _TAP_RESTORE_TARGET_TEMP']['target'] | int %}

  {% if target and (TARGET_TEMP == PROBE_TEMP) %}
    RESPOND MSG="{ 'restoring original extruder target temp %d (current target: %d, actual: %d)' % (target, TARGET_TEMP, ACTUAL_TEMP) }" TYPE=error

    STATUS_HEATING

    M104 S{target}

    SET_GCODE_VARIABLE MACRO=_TAP_RESTORE_TARGET_TEMP VARIABLE=target VALUE=0
  {% endif %}


[gcode_macro CANCEL_PROBE_TARGET_RESTORE]
gcode:
  {% set target = printer['gcode_macro _TAP_RESTORE_TARGET_TEMP']['target'] | int %}

  SET_GCODE_VARIABLE MACRO=_TAP_RESTORE_TARGET_TEMP VARIABLE=target VALUE=0

  {% if target %}
    RESPOND MSG="probe target temperature restore canceled" TYPE=error
  {% endif %}


# overrides and other things I usually forget...

[gcode_macro M109]
rename_existing: X109
gcode:
  CANCEL_PROBE_TARGET_RESTORE
  STATUS_HEATING
  X109 {rawparams}


[gcode_macro PROBE_CALIBRATE]
rename_existing: CORE_PROBE_CALIBRATE
gcode:
  SKIP_QGL SKIP=False
  QGL
  G28
  CENTER
  CORE_PROBE_CALIBRATE {rawparams}


[gcode_macro PROBE_ACCURACY]
rename_existing: CORE_PROBE_ACCURACY
gcode:
  PROBE SAMPLES=2
  CORE_PROBE_ACCURACY {rawparams}
  G91 
  G1 Z+10 F600
  G90 

[gcode_macro PROBE]
rename_existing: CORE_PROBE
gcode:
  {% set probe = printer.configfile.settings.probe %}
  CORE_PROBE {rawparams}
  G91 
  G1 Z+{probe.sample_retract_dist} F{probe.lift_speed|int * 60}
  G90 
