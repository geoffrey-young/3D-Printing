[gcode_macro STORE_NOZZLE]
description: store nozzle pa, smooth, and scv values
gcode:

  # STORE_NOZZLE HOTEND=DRAGON-SF NOZZLE=CHT SIZE=0.4 FILAMENT=ABS PA=0.0675 SMOOTH=0.01 SCV=7

  {% set hotend = params.HOTEND | default(printer['gcode_macro HOTEND_INIT']['hotend']) | string | lower %}
  {% set nozzle = params.NOZZLE | default("") | string | lower %}
  {% set desc = params.DESCRIPTION | default("") | string %}
  {% set size = params.SIZE | default("0.4") | string %}
  {% set filament = params.FILAMENT | default("ABS") | string | lower%}
  {% set pa = params.PA | default("") | string %}
  {% set smooth = params.SMOOTH | default("") | string %}
  {% set scv = params.SCV | default("") | string %}

  {% set svv = printer.save_variables.variables %}

  {% if not nozzle %}
    RAISE_ERROR MSG="no nozzle specified?"
  {% endif %}

  M118 storing hotend:{hotend}
  M118 storing size:{size}
  M118 storing nozzle:{nozzle}
  M118 storing filament:{filament}

  {% set key = 'artie_nozzle^%s^%s^%s^%s' % (hotend,size,nozzle,filament) %}

  M118 key:{key}

  {% set settings = [size,pa,smooth,scv] %}

  {% if not desc %}
    {% set desc = '%s %smm %s nozzle with %s' % (hotend, size, nozzle, filament) %}
  {% endif %}

  {% set v = 'desc:%s,hotend:%s,size:%s,filament:%s,pa:%s,smooth:%s,scv:%s' % (desc, hotend, size, filament, pa, smooth, scv) %}

  SAVE_VARIABLE VARIABLE={key} VALUE="'{v}'"

  DISPLAY_SAVE_VARIABLE KEY={key}


[gcode_macro SET_NOZZLE]
description: retrieve nozzle from storage and set pa, smooth, and scv
gcode:

  # SET_NOZZLE HOTEND=DRAGON-SF NOZZLE=CHT SIZE=0.4 FILAMENT=ABS

  {% set hotend = params.HOTEND | default(printer['gcode_macro HOTEND_INIT']['hotend']) | string | lower %}
  {% set nozzle = params.NOZZLE | default("") | string | lower %}
  {% set size = params.SIZE | default("0.4") | string %}
  {% set filament = params.FILAMENT | default("ABS") | string | lower %}

  {% if not nozzle %}
    RAISE_ERROR MSG="no nozzle specified?"
  {% endif %}

  M118 loading {hotend} settings for { '%smm %s nozzle with %s' % (size, nozzle, filament) }...

  {% set key = 'artie_nozzle^%s^%s^%s^%s' % (hotend,size,nozzle,filament) %}

  {% set svv = printer.save_variables.variables %}

  {% set stored = svv[key] %}

  {% if not stored %}
    {% set msg = "no stored %smm %s %s nozzle found for %s?" % (size, nozzle, filament, hotend) %}
    RAISE_ERROR MSG="{msg}"
  {% endif %}

  {% set n = {} %}
  {% for i in stored.split(',') %}
    {% set k,v = i.split(':') %}
    {% if n.update({k:v}) %}{% endif %}  # nasty... but there's no other way
  {% endfor %}

  {% if n.pa %}
    M118 setting pa to {n.pa}...
    SET_PRESSURE_ADVANCE ADVANCE={n.pa|float}
    NOTE_PRESSURE_ADVANCE
  {% endif %}

  {% if n.smooth %}
    M118 setting smooth to {n.smooth}...
    SET_PRESSURE_ADVANCE SMOOTH_TIME={n.smooth|float}
    NOTE_PRESSURE_ADVANCE
  {% endif %}

  {% if n.scv %}
    M118 setting scv to {n.scv}...
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={n.scv|float}
  {% endif %}

  SAVE_VARIABLE VARIABLE=artie_current_nozzle VALUE="'{key}'"

  LOG_DEBUG MSG='{ "finished %s hotend settings for %s (%s)" % (hotend, nozzle, n.desc) }'


[gcode_macro RESTORE_CURRENT_NOZZLE]
description: call SET_NOZZLE for current nozzle
variable_hotend: "ENOHOTEND"
gcode:

  {% set svv = printer.save_variables.variables %}

  {% set current = svv['artie_current_nozzle'] %}

  {% if not current %}
    RAISE_ERROR MSG="no current nozzle?"
  {% endif %}

  M118 restoring current nozzle {current}

  {% set type, hotend, size, nozzle, filament = current.split('^',4) %}

  {% set current_hotend = printer['gcode_macro HOTEND_INIT']['hotend']  %}

  {% if hotend not in printer['gcode_macro HOTEND_INIT']['hotend'] %}
    {% set msg = "hotend (%s) != stored nozzle hotend (%s).  switching to %s" % (current_hotend, hotend, current_hotend) %}
    RESPOND MSG="{msg}" TYPE=error
    {% set hotend = current_hotend %}
  {% endif %}

  SET_NOZZLE HOTEND={hotend} NOZZLE={nozzle} SIZE={size} FILAMENT={filament}

[gcode_macro DISPLAY_CURRENT_NOZZLE]
description: display current nozzle
gcode:

  {% set svv = printer.save_variables.variables %}

  {% set current = svv['artie_current_nozzle'] %}

  {% set current_hotend = printer['gcode_macro HOTEND_INIT']['hotend']  %}

  {% if not (current and svv[current]) %}
    RESPOND MSG="no current nozzle?" TYPE=error
  {% elif not current_hotend %}
    RESPOND MSG="no current hotend?" TYPE=error
  {% else %}
    RESPOND MSG='{svv[current]}'
  {% endif %}
